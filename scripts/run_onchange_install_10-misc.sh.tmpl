#!/usr/bin/env bash
set -euo pipefail

# if ubuntu based system
{{ if eq .chezmoi.os "linux" -}}
# before setting up the dotfiles, lets make sure we setup all the
# dependency.
wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null

packages=(
    7zip
    apt-transport-https
    aspell
    ca-certificates
    curl
    direnv
    doxygen
    editorconfig
    ethtool
    fontconfig
    git
    gnupg-agent
    graphviz
    htop
    jq
    kitware-archive-keyring
    linux-tools-common
    linux-tools-generic
    linux-tools-`uname -r`
    net-tools
    nmap
    ninja-build
    p7zip-full
    ranger
    shellcheck
    software-properties-common
    sqlite3
    tar
    tmux
    tree
    unzip
    vim
    wget
    wordnet
    zsh
    clang-tidy 
    gobject-introspection
    libdbusmenu-gtk3-dev
    libevdev-dev
    libfmt-dev
    libgirepository1.0-dev
    libgtk-3-dev
    libgtkmm-3.0-dev
    libinput-dev
    libjsoncpp-dev
    libmpdclient-dev
    libnl-3-dev
    libnl-genl-3-dev
    libpulse-dev
    libsigc++-2.0-dev
    libspdlog-dev
    libwayland-dev
    scdoc
    upower
    libxkbregistry-dev
)

# some c++ setup
packages+=(
    build-essential
    clang
    clangd-12
    cmake
    make
)

# unattended upgrades setup
# https://haydenjames.io/how-to-enable-unattended-upgrades-on-ubuntu-debian/
packages+=(
    unattended-upgrades
    apt-listchanges
)

# pyenv dependency
packages+=(
    make
    build-essential
    libssl-dev
    zlib1g-dev
    libbz2-dev
    libreadline-dev
    libsqlite3-dev
    llvm
    libncursesw5-dev
    xz-utils
    tk-dev
    libxml2-dev
    libxmlsec1-dev
    libffi-dev
    liblzma-dev
)

packages+=(
    python3-dev
    python3-pip
)

sudo apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"

sudo apt update

# install all the packages
sudo apt install -y ${packages[@]}

# some variable
echo "local bin directory setup"
LOCALBIN=$HOME/.local/bin
[ -d "$LOCALBIN" ] && echo "directory exists" || mkdir -p $LOCALBIN

echo "set ZSH to default"
if [ "$SHELL" != "/usr/bin/zsh" ]; then
    sudo chsh -s $(which zsh) $USER
fi

sudo pip3 install meson

{{ else if eq .chezmoi.os "darwin" -}}
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
{{ end -}}
